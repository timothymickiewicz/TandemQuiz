{"version":3,"sources":["utils/shuffle.js","components/Question.js","components/End.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["shuffleArray","a","j","x","i","length","Math","floor","random","Question","props","React","useState","questions","setQuestions","useEffect","$","fadeIn","attr","shuffledAnswers","currentQuestion","incorrect","includes","correct","push","shuffle","shuffleAnswers","className","question","map","key","index","Button","onClick","e","css","target","value","text","setTimeout","fadeOut","handleAnswer","active","variant","End","id","Main","questionCount","setQuestionCount","correctAnswers","setCorrectAnswers","incorrectAnswers","setIncorrectAnswers","questionPool","setQuestionPool","answer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e164568a.chunk.js","sourcesContent":["export default function shuffleArray(a) {\n  let j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport $ from 'jquery';\n\nimport shuffle from '../utils/shuffle';\n\nimport './Question.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction Question(props) {\n  const [questions, setQuestions] = React.useState([]);\n\n  React.useEffect(() => {\n    // Resets question formatting\n    $('.correct').fadeIn(500).attr('disabled', false).attr('active', false);\n    $('.incorrect').fadeIn(500).attr('disabled', false).attr('active', false);\n    $('.questionTitle').fadeIn(500);\n\n    // Shuffling to prevent memorizing correct answer order\n    const shuffleAnswers = () => {\n      let shuffledAnswers = props.currentQuestion.incorrect;\n\n      // Adds the correct answer to answer pool if it doesn't already exist in it\n      !shuffledAnswers.includes(props.currentQuestion.correct) ? (\n        shuffledAnswers.push(props.currentQuestion.correct)\n      ) : (\n        <null></null>\n      );\n\n      shuffle(shuffledAnswers);\n      setQuestions(shuffledAnswers);\n    };\n    shuffleAnswers();\n  }, [props.currentQuestion.incorrect, props.currentQuestion.correct]);\n\n  // Handles visual and state changes for answers\n  const handleAnswer = e => {\n    $('.correct').css('background-color', 'green').attr('disabled', true);\n    $('.incorrect').css('background-color', 'red').attr('disabled', true);\n\n    e.target.value === props.currentQuestion.correct\n      ? $('.response')\n          .text('Correct')\n          .css('color', 'green')\n          .css('display', 'initial')\n      : $('.response')\n          .text('Incorrect')\n          .css('color', 'red')\n          .css('display', 'initial');\n\n    // Fading effects make for a much cleaner transition and masks background color changes\n    setTimeout(() => {\n      // Reset correct/incorrect coloring\n      $('.correct').fadeOut(500, () => {\n        $('.correct').css('background-color', '');\n      });\n      $('.incorrect').fadeOut(500, () => {\n        $('.incorrect').css('background-color', '');\n      });\n      $('.response').fadeOut(500, () => {\n        $('.response').text('').css('display', 'none');\n      });\n      $('.questionTitle').fadeOut(500);\n    }, 1500);\n\n    setTimeout(() => {\n      e.target.value === props.currentQuestion.correct\n        ? props.handleAnswer('correct')\n        : props.handleAnswer('incorrect');\n    }, 2000);\n  };\n\n  return (\n    <div className='question'>\n      <div className='response'></div>\n      <h1 className='questionTitle'>{props.currentQuestion.question}</h1>\n      <div className='answerContainer'>\n        {questions.map((key, index) => {\n          return (\n            <Button\n              onClick={e => {\n                handleAnswer(e);\n              }}\n              active={false}\n              value={key}\n              variant='light'\n              className={\n                key === props.currentQuestion.correct\n                  ? 'correct answerBtn'\n                  : 'incorrect answerBtn'\n              }\n              key={index}>\n              {key}\n            </Button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Question;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport './End.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction End(props) {\n  const handleRestart = () => {\n    props.onClick();\n  };\n\n  return (\n    <div className='endContainer'>\n      <span id='score'>\n        {(props.correct / (props.correct + props.incorrect)) * 100 + '%'}\n      </span>\n      <span id='correct'>Correct: {props.correct}</span>\n      <span id='incorrect'>Incorrect: {props.incorrect}</span>\n      <Button\n        onClick={() => handleRestart()}\n        variant='light'\n        className='restartBtn'>\n        Restart\n      </Button>\n    </div>\n  );\n}\n\nexport default End;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport './Main.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport questions from '../utils/Apprentice_TandemFor400_Data.json';\nimport shuffle from '../utils/shuffle';\n\nimport Question from './Question';\nimport End from './End';\n\nfunction Main() {\n  const [questionCount, setQuestionCount] = React.useState(-1);\n  const [correctAnswers, setCorrectAnswers] = React.useState(0);\n  const [incorrectAnswers, setIncorrectAnswers] = React.useState(0);\n  const [questionPool, setQuestionPool] = React.useState([]);\n\n  React.useEffect(() => {\n    setQuestionPool(shuffle(questions));\n  }, []);\n\n  // Assigns points, progresses to next question\n  const handleAnswer = answer => {\n    if (answer === 'correct') {\n      setCorrectAnswers(correctAnswers + 1);\n    } else {\n      setIncorrectAnswers(incorrectAnswers + 1);\n    }\n    setQuestionCount(questionCount + 1);\n  };\n\n  const handleReset = () => {\n    setQuestionCount(0);\n    setCorrectAnswers(0);\n    setIncorrectAnswers(0);\n  };\n\n  const handleStartStop = () => {\n    if (questionCount === -1) {\n      return (\n          <div className=\"wrapStart\">\n            <Button\n            onClick={() => {\n                setQuestionCount(questionCount + 1);\n            }}\n            variant='light'\n            className='start'>\n            Start\n            </Button>\n        </div>\n      );\n    } else {\n      return (\n        <End\n          correct={correctAnswers}\n          incorrect={incorrectAnswers}\n          onClick={() => handleReset()}\n        />\n      );\n    }\n  };\n\n  return (\n    <>\n      <h1 id='title'>\n        Tandem for 400! <span id='subTitle'>Trivia</span>\n      </h1>\n      <div className='main'>\n        {questionCount < 10 && questionCount !== -1 ? (\n          <Question\n            currentQuestion={questionPool[questionCount]}\n            handleAnswer={handleAnswer}\n          />\n        ) : (\n          handleStartStop()\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Main;\n","import './App.css';\n\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}